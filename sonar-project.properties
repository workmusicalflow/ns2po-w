# SonarCloud configuration for NS2PO Election MVP
# Production-grade quality analysis for Nuxt.js/Vue.js/TypeScript monorepo
sonar.projectKey=workmusicalflow_ns2po-w
sonar.organization=workmusicalflow
sonar.projectName=NS2PO Election MVP
sonar.projectDescription=Plateforme électorale numérique avec infrastructure décentralisée

# ========== SOURCE CODE CONFIGURATION ==========

# Monorepo sources configuration - precise paths for better analysis
sonar.sources=apps/election-mvp/components,apps/election-mvp/composables,apps/election-mvp/layouts,apps/election-mvp/pages,apps/election-mvp/server,apps/election-mvp/utils,apps/election-mvp/services,apps/election-mvp/types,packages/ui/src,packages/composables/src,packages/types/src,packages/database/src

# Exclusions from analysis - fine-grained for better coverage
sonar.exclusions=**/.nuxt/**,**/.output/**,**/dist/**,**/node_modules/**,**/.turbo/**,**/coverage/**,**/*.config.js,**/*.config.ts,**/*.d.ts,**/auto-imports.d.ts,**/components.d.ts,**/.eslintrc.*,**/vitest.config.*,**/nuxt.config.*,**/tailwind.config.*

# File patterns for different analysis types
sonar.inclusions=**/*.ts,**/*.vue,**/*.js,**/*.jsx,**/*.tsx

# ========== MONOREPO FINE-GRAINED EXCLUSIONS ==========

# Build and generated file exclusions per package
sonar.exclusions.ui=packages/ui/dist/**,packages/ui/node_modules/**,packages/ui/.turbo/**
sonar.exclusions.database=packages/database/dist/**,packages/database/node_modules/**,packages/database/.turbo/**
sonar.exclusions.types=packages/types/dist/**,packages/types/node_modules/**,packages/types/.turbo/**
sonar.exclusions.composables=packages/composables/dist/**,packages/composables/node_modules/**,packages/composables/.turbo/**

# App-specific exclusions
sonar.exclusions.app=apps/election-mvp/.nuxt/**,apps/election-mvp/.output/**,apps/election-mvp/node_modules/**,apps/election-mvp/.turbo/**

# Third-party and generated code exclusions
sonar.exclusions.generated=**/auto-imports.d.ts,**/components.d.ts,**/*.generated.*,**/schema.prisma

# Test-related exclusions (until tests are implemented)
sonar.exclusions.tests=**/*.test.*,**/*.spec.*,**/test/**,**/tests/**,**/__tests__/**

# Development and configuration exclusions
sonar.exclusions.config=**/*.config.*,**/.env*,**/README.md,**/CHANGELOG.md

# ========== TESTING & COVERAGE CONFIGURATION ==========

# Test files location - commented out until test directories are created
# sonar.tests=apps/election-mvp/tests,packages/ui/tests,packages/composables/tests,packages/database/tests

# Test file patterns - ready for future test implementation
sonar.test.inclusions=**/*.test.ts,**/*.test.js,**/*.spec.ts,**/*.spec.js,**/*.test.vue

# Coverage reports (LCOV format) - commented out until coverage is implemented
# sonar.javascript.lcov.reportPaths=apps/election-mvp/coverage/lcov.info,packages/ui/coverage/lcov.info,packages/composables/coverage/lcov.info,packages/database/coverage/lcov.info

# ========== TYPESCRIPT CONFIGURATION ==========

# Multiple TypeScript configurations for monorepo
sonar.typescript.tsconfigPaths=apps/election-mvp/tsconfig.json,packages/ui/tsconfig.json,packages/composables/tsconfig.json,packages/types/tsconfig.json,packages/config/tsconfig.json

# TypeScript-specific rules and configurations
sonar.typescript.detectOpenApi=true
sonar.typescript.ignoreHeaderComments=false
sonar.typescript.node.maxspace=4096

# Enhanced TypeScript analysis for monorepo
sonar.typescript.lcov.reportPaths=coverage/lcov.info
sonar.typescript.exclusions=**/*.d.ts,**/node_modules/**

# Vue.js TypeScript integration
sonar.typescript.vue.enabled=true

# Dependency analysis for monorepo packages
sonar.typescript.internal.typescriptLocation=node_modules/typescript/lib

# ========== ANALYSIS SETTINGS ==========

# Quality gate focuses on new code with strict standards
sonar.qualitygate.wait=true
sonar.newCode.referenceBranch=main

# ========== CUSTOM QUALITY GATE FOR MVP ==========

# MVP-adapted quality thresholds - strict but realistic for development phase
# Focus on maintainability and security over coverage for initial MVP

# Code coverage thresholds (commented until coverage is implemented)
# sonar.coverage.exclusions=**/*.config.*,**/*.d.ts,**/auto-imports.d.ts

# Maintainability thresholds
sonar.maintainabilityRating=A
sonar.technicalDebt.ratingOnNewCode=A

# Reliability thresholds  
sonar.reliabilityRating=A
sonar.bugs.newCodeTarget=0

# Security thresholds
sonar.securityRating=A
sonar.vulnerabilities.newCodeTarget=0
sonar.securityHotspots.newCodeTarget=0

# Duplication thresholds
sonar.duplicatedLines.newCodeTarget=3.0

# Size and complexity thresholds for MVP
sonar.complexity.threshold=10
sonar.function.complexity.threshold=15

# Encoding and language settings
sonar.sourceEncoding=UTF-8
sonar.language=ts

# ========== ANALYSIS PERFORMANCE ==========

# Optimize analysis for large codebase
# sonar.scanner.metadataFilePath=.sonar/report-task.txt
sonar.working.directory=.sonar

# ========== DUPLICATION DETECTION ==========

# Duplication settings for Vue/TypeScript
sonar.cpd.exclusions=**/*.spec.ts,**/*.test.ts,**/*.d.ts
sonar.cpd.cross_project=true

# ========== SECURITY & QUALITY RULES ==========

# Enable security hotspot detection
sonar.security.hotspots.inheritance=true

# Web-specific security rules
sonar.web.fileExtensions=.vue,.html

# ========== ADVANCED SECURITY CONFIGURATION ==========

# Security rules for TypeScript/JavaScript
sonar.javascript.detectionsecurity=true

# XSS protection for Vue templates
sonar.security.xss.enabled=true

# CSRF protection validation
sonar.security.csrf.enabled=true

# SQL injection detection
sonar.security.sqli.enabled=true

# Authentication and authorization rules
sonar.security.authentication.enabled=true

# Sensitive data detection in code
sonar.security.sensitiveData.enabled=true

# ========== WEB ACCESSIBILITY CONFIGURATION ==========

# WCAG 2.1 AA compliance rules
sonar.accessibility.wcag.level=AA
sonar.accessibility.wcag.version=2.1

# Semantic HTML validation
sonar.accessibility.semantic.enabled=true

# Color contrast validation
sonar.accessibility.contrast.enabled=true

# Keyboard navigation validation
sonar.accessibility.keyboard.enabled=true

# Screen reader compatibility
sonar.accessibility.screenReader.enabled=true

# Alternative text validation for images
sonar.accessibility.alt.enabled=true

# Form accessibility validation
sonar.accessibility.forms.enabled=true

# ========== BRANCH ANALYSIS ==========

# Pull request decoration settings
sonar.pullrequest.github.repository=workmusicalflow/ns2po-w

# ========== CUSTOM PROPERTIES FOR MVP ==========

# Project metadata
sonar.links.homepage=https://github.com/workmusicalflow/ns2po-w
sonar.links.ci=https://github.com/workmusicalflow/ns2po-w/actions
sonar.links.scm=https://github.com/workmusicalflow/ns2po-w

# MVP-specific analysis focus
# Prioritize maintainability and security over coverage for MVP phase