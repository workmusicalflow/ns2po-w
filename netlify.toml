[build]
  # Build depuis la racine du monorepo pour pnpm workspaces
  base = "."

  # Commande de build simplifiée sans flags restrictifs
  command = "pnpm install --frozen-lockfile && node scripts/force-oxc-wasm.js && pnpm --filter @ns2po/election-mvp build"

  # Répertoire de sortie après build
  publish = "apps/election-mvp/.output/public"

[build.environment]
  # Version Node.js stable LTS
  NODE_VERSION = "20.18.0"
  # Version pnpm
  PNPM_VERSION = "9.1.0"

  # Variables WASM pour contourner les problèmes oxc
  FORCE_WASM = "true"
  USE_WASM = "1"
  OXC_USE_WASM = "true"
  OXC_FORCE_WASM = "true"
  OXLINT_FORCE_WASM = "1"
  NAPI_RS_FORCE_WASI = "1"

  # Variables restrictives SUPPRIMÉES pour permettre l'installation des bindings natifs :
  # NPM_CONFIG_OPTIONAL = "false" # Empêchait @rollup/rollup-linux-x64-gnu
  # NPM_CONFIG_IGNORE_SCRIPTS = "true" # Bloquait les scripts de fallback
  # PNPM_IGNORE_SCRIPTS = "true"
  # SKIP_INSTALL_OPTIONAL = "true"
  # DISABLE_NATIVE_BINDINGS = "true" # Trop restrictif

# Configuration des fonctions serverless pour les API routes Nuxt
[functions]
  # Répertoire des fonctions générées par Nuxt
  directory = "apps/election-mvp/.output/server"

# Redirections et règles de routage pour SPA Nuxt
[[redirects]]
  # Redirection pour les routes Nuxt (SPA fallback)
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["public"]}

# Headers pour optimisation performance
[[headers]]
  for = "/_nuxt/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache"

# Configuration spécifique monorepo
[build.processing]
  # Optimisations pour les images Cloudinary
  skip_processing = true

# Variables d'environnement pour le build (à compléter via dashboard Netlify)
[context.production.environment]
  NODE_ENV = "production"

[context.deploy-preview.environment]
  NODE_ENV = "production"

[context.branch-deploy.environment]
  NODE_ENV = "development"